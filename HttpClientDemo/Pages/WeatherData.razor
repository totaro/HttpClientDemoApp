@page "/weather"


@inject IHttpClientFactory _clientFactory


@*<h3>Weather Data: @forecast.Title@forecast.Title (@forecast.Timezone || Rise: @forecast.Sun_rise | Set @forecast.Sun_set</h3>*@
<h3>Weather Data </h3>
@if (string.IsNullOrWhiteSpace(errorString) == false)
{
	<div class="h2">@errorString</div>
}
else if(forecast is null)
{
	<div class="h4">Loading...</div>
}
else
{
	DateTime today = DateTime.Now; 
	

	<table class="table table-striped">
		<thead class="thead-dark"><b>(@today) @forecast.Title @forecast.Timezone || Rise: @forecast.Sun_rise | Set @forecast.Sun_set<br>Source: https://www.metaweather.com/api/location/565346/</b></thead>
		<thead class="thead-dark">
			<tr>
				<th>Date</th>
				<th>Weather State</th>
				<th>Low</th>
				<th>High</th>
			</tr>
		</thead>
		<tbody>
			

			


			@foreach (var w in forecast.Consolidated_weather)
			{
			<tr>
				
				<td>@w.applicable_date</td>
				<td>@w.weather_state_name</td>
				<td>@MathF.Round(w.min_temp, 1) C</td>
				<td>@MathF.Round(w.max_temp, 1) C</td>
				
			</tr>
			}
		</tbody>

	</table>
}

@code {
	//HttpClientDemo.Models.WeatherForecastModel

	
	WeatherForecastModel? forecast;
	string errorString;

	int wueid = 565346;

	//DateTime today = DateTime.Now;
	
	protected override async Task OnInitializedAsync()
	{

		
		//var request = new HttpRequestMessage(HttpMethod.Get,
		//	"https://www.metaweather.com/api/location/565346/");

		//var client = _clientFactory.CreateClient();

		//HttpResponseMessage response = await client.SendAsync(request);

		//if (response.IsSuccessStatusCode)
		//{
		//	forecast = await response.Content.ReadFromJsonAsync<WeatherForecastModel>();
		//	errorString = null;
		//}
		//else
		//{
		//	errorString = $"There was an error to get forecast response:  {response.ReasonPhrase}";
		//}


		////return base.OnInitializedAsync();

		//var client = _clientFactory.CreateClient();
		var client = _clientFactory.CreateClient("meta");

		try
		{
			//forecast = await client.GetFromJsonAsync<WeatherForecastModel>("https://www.metaweather.com/api/location/565346/");
			//forecast = await client.GetFromJsonAsync<WeatherForecastModel>($"location/565346/{wueid}");
			forecast = await client.GetFromJsonAsync<WeatherForecastModel>($"location/{wueid}/");
			errorString = null;
		} 
		catch(Exception ex)
		{
			errorString = $"There was an error to get forecast response:  {ex.Message}";
		}


	}

}
